{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.3.539.46024",
      "templateHash": "1146442748005809912"
    }
  },
  "parameters": {
    "resourceGroupPrefrix": {
      "type": "string",
      "defaultValue": "AZDemoSB-Bicep-WVD"
    },
    "hostpoolName": {
      "type": "string",
      "defaultValue": "myBicepHostpool"
    },
    "hostpoolFriendlyName": {
      "type": "string",
      "defaultValue": "My Bicep deployed Hostpool"
    },
    "appgroupName": {
      "type": "string",
      "defaultValue": "myBicepAppGroup"
    },
    "appgroupNameFriendlyName": {
      "type": "string",
      "defaultValue": "My Bicep deployed Appgroup"
    },
    "workspaceName": {
      "type": "string",
      "defaultValue": "myBicepWorkspace"
    },
    "workspaceNameFriendlyName": {
      "type": "string",
      "defaultValue": "My Bicep deployed Workspace"
    },
    "preferredAppGroupType": {
      "type": "string",
      "defaultValue": "Desktop"
    },
    "wvdbackplanelocation": {
      "type": "string",
      "defaultValue": "eastus"
    },
    "hostPoolType": {
      "type": "string",
      "defaultValue": "pooled"
    },
    "loadBalancerType": {
      "type": "string",
      "defaultValue": "BreadthFirst"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": "AZDemosSBLAWorkspace"
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "bicep-vnet"
    },
    "vnetaddressPrefix": {
      "type": "string",
      "defaultValue": "10.50.0.0/23"
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.50.1.0/24"
    },
    "sasubnetPrefix": {
      "type": "string",
      "defaultValue": "10.50.0.0/28"
    },
    "vnetLocation": {
      "type": "string",
      "defaultValue": "northeurope"
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "bicep-subnet"
    },
    "sasubnetName": {
      "type": "string",
      "defaultValue": "bicep-sa-subnet"
    },
    "HubvnetName": {
      "type": "string",
      "defaultValue": "Identity-vnet"
    },
    "HubvnetRg": {
      "type": "string",
      "defaultValue": "AzDemoSB-Identity-rg"
    },
    "storageaccountlocation": {
      "type": "string",
      "defaultValue": "northeurope"
    },
    "storageaccountName": {
      "type": "string",
      "defaultValue": "bicepsaazsmblabs"
    },
    "storageaccountkind": {
      "type": "string",
      "defaultValue": "FileStorage"
    },
    "storageaccountredundancytype": {
      "type": "string",
      "defaultValue": "Premium_LRS"
    },
    "fileshareFolderName": {
      "type": "string",
      "defaultValue": "profilecontainers"
    },
    "saPEName": {
      "type": "string",
      "defaultValue": "wvdsape"
    },
    "existingVnetName": {
      "type": "string",
      "defaultValue": "[parameters('vnetName')]"
    },
    "existingSubnetName": {
      "type": "string",
      "defaultValue": "[parameters('subnetName')]"
    },
    "dnsLabelPrefix": {
      "type": "string",
      "maxLength": 62,
      "minLength": 1
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B2ms"
    },
    "domainToJoin": {
      "type": "string"
    },
    "domainUserName": {
      "type": "string"
    },
    "domainPassword": {
      "type": "secureString"
    },
    "vmAdminUsername": {
      "type": "string"
    },
    "vmAdminPassword": {
      "type": "secureString"
    },
    "location": {
      "type": "string",
      "defaultValue": "[parameters('vnetLocation')]"
    },
    "dnsservers": {
      "type": "string",
      "defaultValue": "10.1.0.4"
    },
    "ouPath": {
      "type": "string",
      "defaultValue": "OU=WVD,DC=azurelabsmb,DC=local"
    }
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-01-01",
      "name": "[parameters('resourceGroupPrefrix')]",
      "location": "northeurope"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "wvdbackplane",
      "resourceGroup": "[parameters('resourceGroupPrefrix')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "hostpoolName": {
            "value": "[parameters('hostpoolName')]"
          },
          "hostpoolFriendlyName": {
            "value": "[parameters('hostpoolFriendlyName')]"
          },
          "appgroupName": {
            "value": "[parameters('appgroupName')]"
          },
          "appgroupNameFriendlyName": {
            "value": "[parameters('appgroupNameFriendlyName')]"
          },
          "workspaceName": {
            "value": "[parameters('workspaceName')]"
          },
          "workspaceNameFriendlyName": {
            "value": "[parameters('workspaceNameFriendlyName')]"
          },
          "preferredAppGroupType": {
            "value": "[parameters('preferredAppGroupType')]"
          },
          "applicationgrouptype": {
            "value": "[parameters('preferredAppGroupType')]"
          },
          "wvdbackplanelocation": {
            "value": "[parameters('wvdbackplanelocation')]"
          },
          "hostPoolType": {
            "value": "[parameters('hostPoolType')]"
          },
          "loadBalancerType": {
            "value": "[parameters('loadBalancerType')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          },
          "logAnalyticsResourceGroup": {
            "value": "[parameters('resourceGroupPrefrix')]"
          },
          "wvdBackplaneResourceGroup": {
            "value": "[parameters('resourceGroupPrefrix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.3.539.46024",
              "templateHash": "4789260279621068565"
            }
          },
          "parameters": {
            "hostpoolName": {
              "type": "string"
            },
            "hostpoolFriendlyName": {
              "type": "string"
            },
            "appgroupName": {
              "type": "string"
            },
            "appgroupNameFriendlyName": {
              "type": "string"
            },
            "workspaceName": {
              "type": "string"
            },
            "workspaceNameFriendlyName": {
              "type": "string"
            },
            "applicationgrouptype": {
              "type": "string",
              "defaultValue": "Desktop"
            },
            "preferredAppGroupType": {
              "type": "string",
              "defaultValue": "Desktop"
            },
            "wvdbackplanelocation": {
              "type": "string",
              "defaultValue": "eastus"
            },
            "hostPoolType": {
              "type": "string",
              "defaultValue": "pooled"
            },
            "loadBalancerType": {
              "type": "string",
              "defaultValue": "BreadthFirst"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string"
            },
            "logAnalyticslocation": {
              "type": "string",
              "defaultValue": "northeurope"
            },
            "logAnalyticsWorkspaceSku": {
              "type": "string",
              "defaultValue": "pergb2018"
            },
            "logAnalyticsResourceGroup": {
              "type": "string"
            },
            "wvdBackplaneResourceGroup": {
              "type": "string"
            },
            "baseTime": {
              "type": "string",
              "defaultValue": "[utcNow('u')]"
            }
          },
          "functions": [],
          "variables": {
            "add4Hours": "[dateTimeAdd(parameters('baseTime'), 'PT4H')]"
          },
          "resources": [
            {
              "type": "Microsoft.DesktopVirtualization/hostPools",
              "apiVersion": "2021-02-01-preview",
              "name": "[parameters('hostpoolName')]",
              "location": "[parameters('wvdbackplanelocation')]",
              "properties": {
                "friendlyName": "[parameters('hostpoolFriendlyName')]",
                "hostPoolType": "[parameters('hostPoolType')]",
                "loadBalancerType": "[parameters('loadBalancerType')]",
                "preferredAppGroupType": "[parameters('preferredAppGroupType')]",
                "registrationInfo": {
                  "expirationTime": "[variables('add4Hours')]",
                  "token": "token",
                  "registrationTokenOperation": "Update"
                }
              }
            },
            {
              "type": "Microsoft.DesktopVirtualization/applicationGroups",
              "apiVersion": "2021-01-14-preview",
              "name": "[parameters('appgroupName')]",
              "location": "[parameters('wvdbackplanelocation')]",
              "properties": {
                "friendlyName": "[parameters('appgroupNameFriendlyName')]",
                "applicationGroupType": "[parameters('applicationgrouptype')]",
                "hostPoolArmPath": "[resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('hostpoolName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('hostpoolName'))]"
              ]
            },
            {
              "type": "Microsoft.DesktopVirtualization/workspaces",
              "apiVersion": "2021-02-01-preview",
              "name": "[parameters('workspaceName')]",
              "location": "[parameters('wvdbackplanelocation')]",
              "properties": {
                "friendlyName": "[parameters('workspaceNameFriendlyName')]",
                "applicationGroupReferences": [
                  "[resourceId('Microsoft.DesktopVirtualization/applicationGroups', parameters('appgroupName'))]"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.DesktopVirtualization/applicationGroups', parameters('appgroupName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "LAWorkspace",
              "resourceGroup": "[parameters('logAnalyticsResourceGroup')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "logAnalyticsWorkspaceName": {
                    "value": "[parameters('logAnalyticsWorkspaceName')]"
                  },
                  "logAnalyticslocation": {
                    "value": "[parameters('logAnalyticslocation')]"
                  },
                  "logAnalyticsWorkspaceSku": {
                    "value": "[parameters('logAnalyticsWorkspaceSku')]"
                  },
                  "hostpoolName": {
                    "value": "[parameters('hostpoolName')]"
                  },
                  "workspaceName": {
                    "value": "[parameters('workspaceName')]"
                  },
                  "logAnalyticsResourceGroup": {
                    "value": "[parameters('logAnalyticsResourceGroup')]"
                  },
                  "wvdBackplaneResourceGroup": {
                    "value": "[parameters('wvdBackplaneResourceGroup')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.3.539.46024",
                      "templateHash": "13650316137738058511"
                    }
                  },
                  "parameters": {
                    "logAnalyticsWorkspaceName": {
                      "type": "string"
                    },
                    "logAnalyticslocation": {
                      "type": "string",
                      "defaultValue": "northeurope"
                    },
                    "logAnalyticsWorkspaceSku": {
                      "type": "string",
                      "defaultValue": "pergb2018"
                    },
                    "hostpoolName": {
                      "type": "string"
                    },
                    "workspaceName": {
                      "type": "string"
                    },
                    "logAnalyticsResourceGroup": {
                      "type": "string"
                    },
                    "wvdBackplaneResourceGroup": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces",
                      "apiVersion": "2020-08-01",
                      "name": "[parameters('logAnalyticsWorkspaceName')]",
                      "location": "[parameters('logAnalyticslocation')]",
                      "properties": {
                        "sku": {
                          "name": "[parameters('logAnalyticsWorkspaceSku')]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2019-10-01",
                      "name": "myBicepLADiag",
                      "resourceGroup": "[parameters('wvdBackplaneResourceGroup')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "logAnalyticsWorkspaceID": {
                            "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
                          },
                          "hostpoolName": {
                            "value": "[parameters('hostpoolName')]"
                          },
                          "workspaceName": {
                            "value": "[parameters('workspaceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.3.539.46024",
                              "templateHash": "5005998212056445527"
                            }
                          },
                          "parameters": {
                            "logAnalyticsWorkspaceID": {
                              "type": "string"
                            },
                            "hostpoolName": {
                              "type": "string"
                            },
                            "workspaceName": {
                              "type": "string"
                            }
                          },
                          "functions": [],
                          "resources": [
                            {
                              "type": "microsoft.insights/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "scope": "[format('Microsoft.DesktopVirtualization/hostPools/{0}', parameters('hostpoolName'))]",
                              "name": "hostpool-diag",
                              "properties": {
                                "workspaceId": "[parameters('logAnalyticsWorkspaceID')]",
                                "logs": [
                                  {
                                    "category": "Checkpoint",
                                    "enabled": true
                                  },
                                  {
                                    "category": "Error",
                                    "enabled": true
                                  },
                                  {
                                    "category": "Management",
                                    "enabled": true
                                  },
                                  {
                                    "category": "Connection",
                                    "enabled": true
                                  },
                                  {
                                    "category": "HostRegistration",
                                    "enabled": true
                                  }
                                ]
                              }
                            },
                            {
                              "type": "microsoft.insights/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "scope": "[format('Microsoft.DesktopVirtualization/workspaces/{0}', parameters('workspaceName'))]",
                              "name": "workspacepool-diag",
                              "properties": {
                                "workspaceId": "[parameters('logAnalyticsWorkspaceID')]",
                                "logs": [
                                  {
                                    "category": "Checkpoint",
                                    "enabled": true
                                  },
                                  {
                                    "category": "Error",
                                    "enabled": true
                                  },
                                  {
                                    "category": "Management",
                                    "enabled": true
                                  },
                                  {
                                    "category": "Feed",
                                    "enabled": true
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('hostpoolName'))]",
                "[resourceId('Microsoft.DesktopVirtualization/workspaces', parameters('workspaceName'))]"
              ]
            }
          ],
          "outputs": {
            "add4HourOutput": {
              "type": "string",
              "value": "[variables('add4Hours')]"
            },
            "hpregistrationtoken": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('hostpoolName'))).registrationInfo.token]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupPrefrix'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "wvdnetwork",
      "resourceGroup": "[parameters('resourceGroupPrefrix')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "vnetaddressPrefix": {
            "value": "[parameters('vnetaddressPrefix')]"
          },
          "subnetPrefix": {
            "value": "[parameters('subnetPrefix')]"
          },
          "vnetLocation": {
            "value": "[parameters('vnetLocation')]"
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "dnsservers": {
            "value": "[parameters('dnsservers')]"
          },
          "sasubnetName": {
            "value": "[parameters('sasubnetName')]"
          },
          "sasubnetPrefix": {
            "value": "[parameters('sasubnetPrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.3.539.46024",
              "templateHash": "1145603343608928878"
            }
          },
          "parameters": {
            "vnetName": {
              "type": "string"
            },
            "vnetaddressPrefix": {
              "type": "string"
            },
            "subnetPrefix": {
              "type": "string"
            },
            "vnetLocation": {
              "type": "string"
            },
            "subnetName": {
              "type": "string"
            },
            "dnsservers": {
              "type": "string"
            },
            "sasubnetName": {
              "type": "string"
            },
            "sasubnetPrefix": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-11-01",
              "name": "[parameters('vnetName')]",
              "location": "[parameters('vnetLocation')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetaddressPrefix')]"
                  ]
                },
                "dhcpOptions": {
                  "dnsServers": [
                    "[parameters('dnsservers')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[parameters('subnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnetPrefix')]"
                    }
                  },
                  {
                    "name": "[parameters('sasubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('sasubnetPrefix')]"
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "vnet1id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupPrefrix'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('{0}wvdpeering1', 'wvdnetwork')]",
      "resourceGroup": "[parameters('resourceGroupPrefrix')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "peeringnamefromwvdvnet": {
            "value": "[format('{0}/{1}-to-{2}', parameters('vnetName'), parameters('vnetName'), parameters('HubvnetName'))]"
          },
          "identityVnetID": {
            "value": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubvnetRg')), 'Microsoft.Network/virtualNetworks', parameters('HubvnetName'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.3.539.46024",
              "templateHash": "14495814806325370611"
            }
          },
          "parameters": {
            "identityVnetID": {
              "type": "string"
            },
            "peeringnamefromwvdvnet": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2020-05-01",
              "name": "[parameters('peeringnamefromwvdvnet')]",
              "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                  "id": "[parameters('identityVnetID')]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupPrefrix'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupPrefrix')), 'Microsoft.Resources/deployments', 'wvdnetwork')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('{0}wvdpeeringid', 'wvdnetwork')]",
      "resourceGroup": "AzDemoSB-Identity-rg",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "peeringnamefromhubvnet": {
            "value": "[format('{0}/{1}-to-{2}', parameters('HubvnetName'), parameters('HubvnetName'), parameters('vnetName'))]"
          },
          "wvdvnetID": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupPrefrix')), 'Microsoft.Resources/deployments', 'wvdnetwork'), '2019-10-01').outputs.vnet1id.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.3.539.46024",
              "templateHash": "7169430765622565429"
            }
          },
          "parameters": {
            "wvdvnetID": {
              "type": "string"
            },
            "peeringnamefromhubvnet": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2020-05-01",
              "name": "[parameters('peeringnamefromhubvnet')]",
              "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                  "id": "[parameters('wvdvnetID')]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupPrefrix')), 'Microsoft.Resources/deployments', 'wvdnetwork')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "wvdFileServices",
      "resourceGroup": "[parameters('resourceGroupPrefrix')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageaccountlocation": {
            "value": "[parameters('storageaccountlocation')]"
          },
          "storageaccountName": {
            "value": "[parameters('storageaccountName')]"
          },
          "storageaccountkind": {
            "value": "[parameters('storageaccountkind')]"
          },
          "storageaccountredundancytype": {
            "value": "[parameters('storageaccountredundancytype')]"
          },
          "fileshareFolderName": {
            "value": "[parameters('fileshareFolderName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.3.539.46024",
              "templateHash": "9615521286600014993"
            }
          },
          "parameters": {
            "storageaccountlocation": {
              "type": "string"
            },
            "storageaccountName": {
              "type": "string"
            },
            "storageaccountkind": {
              "type": "string"
            },
            "storageaccountredundancytype": {
              "type": "string",
              "defaultValue": "Premium_LRS"
            },
            "fileshareFolderName": {
              "type": "string",
              "defaultValue": "profilecontainers"
            }
          },
          "functions": [],
          "variables": {
            "filesharelocation": "[format('{0}/default/{1}', parameters('storageaccountName'), parameters('fileshareFolderName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2020-08-01-preview",
              "name": "[parameters('storageaccountName')]",
              "location": "[parameters('storageaccountlocation')]",
              "kind": "[parameters('storageaccountkind')]",
              "sku": {
                "name": "[parameters('storageaccountredundancytype')]"
              },
              "properties": {
                "allowBlobPublicAccess": false,
                "minimumTlsVersion": "TLS1_2",
                "allowSharedKeyAccess": true
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2021-02-01",
              "name": "[variables('filesharelocation')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccountName'))]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccountName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupPrefrix'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "wvdpe",
      "resourceGroup": "[parameters('resourceGroupPrefrix')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storagesubnetid": {
            "value": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupPrefrix')), 'Microsoft.Network/virtualNetworks/subnets', split(parameters('sasubnetName'), '/')[0], split(parameters('sasubnetName'), '/')[1])]"
          },
          "storageaccountid": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupPrefrix')), 'Microsoft.Resources/deployments', 'wvdFileServices'), '2019-10-01').outputs.id.value]"
          },
          "vnetlinkID": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupPrefrix')), 'Microsoft.Resources/deployments', 'wvdnetwork'), '2019-10-01').outputs.vnet1id.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.3.539.46024",
              "templateHash": "10267653456650121154"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "privateEndpointName": {
              "type": "string",
              "defaultValue": "privateEndpointwvd"
            },
            "privateLinkConnectionName": {
              "type": "string",
              "defaultValue": "privateLinkwvd"
            },
            "privateDNSZoneName": {
              "type": "string",
              "defaultValue": "privatelink.file.core.windows.net"
            },
            "websiteDNSName": {
              "type": "string",
              "defaultValue": ".file.core.windows.net"
            },
            "storagesubnetid": {
              "type": "string"
            },
            "storageaccountid": {
              "type": "string"
            },
            "vnetlinkID": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2020-06-01",
              "name": "[parameters('privateEndpointName')]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('storagesubnetid')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[parameters('privateLinkConnectionName')]",
                    "properties": {
                      "privateLinkServiceId": "[parameters('storageaccountid')]",
                      "groupIds": [
                        "storageaccounts"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[parameters('privateDNSZoneName')]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}-link', parameters('privateDNSZoneName'), parameters('privateDNSZoneName'))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('vnetlinkID')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/dnsgroupname', parameters('privateEndpointName'))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config1",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZoneName'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpointName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupPrefrix'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupPrefrix')), 'Microsoft.Resources/deployments', 'wvdFileServices')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupPrefrix')), 'Microsoft.Resources/deployments', 'wvdnetwork')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "wvdfirstsessionhost",
      "resourceGroup": "[parameters('resourceGroupPrefrix')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "dnsLabelPrefix": {
            "value": "[parameters('dnsLabelPrefix')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "vmAdminUsername": {
            "value": "[parameters('vmAdminUsername')]"
          },
          "vmAdminPassword": {
            "value": "[parameters('vmAdminPassword')]"
          },
          "domainToJoin": {
            "value": "[parameters('domainToJoin')]"
          },
          "domainUserName": {
            "value": "[parameters('domainUserName')]"
          },
          "domainPassword": {
            "value": "[parameters('domainPassword')]"
          },
          "existingSubnetName": {
            "value": "[parameters('existingSubnetName')]"
          },
          "existingVnetName": {
            "value": "[parameters('existingVnetName')]"
          },
          "ouPath": {
            "value": "[parameters('ouPath')]"
          },
          "hostpoolName": {
            "value": "[parameters('hostpoolName')]"
          },
          "hostpoolToken": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupPrefrix')), 'Microsoft.Resources/deployments', 'wvdbackplane'), '2019-10-01').outputs.hpregistrationtoken.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.3.539.46024",
              "templateHash": "1332118971848828488"
            }
          },
          "parameters": {
            "existingVnetName": {
              "type": "string"
            },
            "existingSubnetName": {
              "type": "string"
            },
            "dnsLabelPrefix": {
              "type": "string",
              "maxLength": 62,
              "minLength": 1
            },
            "vmSize": {
              "type": "string"
            },
            "domainToJoin": {
              "type": "string"
            },
            "domainUserName": {
              "type": "string"
            },
            "domainPassword": {
              "type": "secureString"
            },
            "ouPath": {
              "type": "string"
            },
            "domainJoinOptions": {
              "type": "int",
              "defaultValue": 3,
              "metadata": {
                "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
              }
            },
            "vmAdminUsername": {
              "type": "string"
            },
            "vmAdminPassword": {
              "type": "secureString"
            },
            "artifactsLocation": {
              "type": "string",
              "defaultValue": "https://raw.githubusercontent.com/Azure/RDS-Templates/master/ARM-wvd-templates/DSC/Configuration.zip",
              "metadata": {
                "description": "The base URI where artifacts required by this template are located."
              }
            },
            "hostpoolName": {
              "type": "string"
            },
            "hostpoolToken": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "functions": [],
          "variables": {
            "storageAccountName": "[uniqueString(resourceGroup().id, deployment().name)]",
            "imagePublisher": "microsoftwindowsdesktop",
            "imageOffer": "office-365",
            "windowsOSVersion": "20h2-evd-o365pp-g2",
            "nicName": "[format('{0}-nic', parameters('dnsLabelPrefix'))]",
            "subnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), parameters('existingSubnetName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2020-08-01-preview",
              "name": "[variables('storageAccountName')]",
              "location": "[parameters('location')]",
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2020-06-01",
              "name": "[variables('nicName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[variables('subnetId')]"
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2020-06-01",
              "name": "[parameters('dnsLabelPrefix')]",
              "location": "[parameters('location')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[parameters('dnsLabelPrefix')]",
                  "adminUsername": "[parameters('vmAdminUsername')]",
                  "adminPassword": "[parameters('vmAdminPassword')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "[variables('imagePublisher')]",
                    "offer": "[variables('imageOffer')]",
                    "sku": "[variables('windowsOSVersion')]",
                    "version": "latest"
                  },
                  "osDisk": {
                    "name": "[format('{0}-OsDisk', parameters('dnsLabelPrefix'))]",
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                  },
                  "dataDisks": [
                    {
                      "name": "[format('{0}-DataDisk', parameters('dnsLabelPrefix'))]",
                      "caching": "None",
                      "createOption": "Empty",
                      "diskSizeGB": 1024,
                      "lun": 0
                    }
                  ]
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/joindomain', parameters('dnsLabelPrefix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "name": "[parameters('domainToJoin')]",
                  "ouPath": "[parameters('ouPath')]",
                  "user": "[format('{0}\\{1}', parameters('domainToJoin'), parameters('domainUserName'))]",
                  "restart": true,
                  "options": "[parameters('domainJoinOptions')]"
                },
                "protectedSettings": {
                  "password": "[parameters('domainPassword')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('dnsLabelPrefix'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2018-10-01",
              "name": "[format('{0}/Microsoft.PowerShell.DSC', parameters('dnsLabelPrefix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.73",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "modulesUrl": "[parameters('artifactsLocation')]",
                  "configurationFunction": "Configuration.ps1\\AddSessionHost",
                  "properties": {
                    "hostPoolName": "[parameters('hostpoolName')]",
                    "registrationInfoToken": "[parameters('hostpoolToken')]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', split(format('{0}/joindomain', parameters('dnsLabelPrefix')), '/')[0], split(format('{0}/joindomain', parameters('dnsLabelPrefix')), '/')[1])]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('dnsLabelPrefix'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupPrefrix'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupPrefrix')), 'Microsoft.Resources/deployments', 'wvdbackplane')]"
      ]
    }
  ]
}